int maxPathSum(vector<vector<int>> b, int p, int q) {
int n=b.size(),m=b[0].size(),i,j;
int a[n][m];
for(i=0;i<n;i++){
    for(j=0;j<m;j++){
        a[i][j]=b[i][j];
    }
}
for (int r = 1; r <n; r++) {
            for (int c = 0; c < m; ++c) {
                int best = a[r-1][c];
                if (c > 0)
                    best = max(best, a[r-1][c-1]);
                if (c+1 < m)
                    best = max(best, a[r-1][c+1]);
                a[r][c] += best;
            }
        }
for (int r = n-2; r >= 0; --r) {
            for (int c = 0; c < m; ++c) {
                int best = b[r+1][c];
                if (c > 0)
                    best = max(best, b[r+1][c-1]);
                if (c+1 < m)
                    best = max(best, b[r+1][c+1]);
                b[r][c] += best;
            }
        }
cout<<b[0][p]<<" "<<a[n-1][q];        
return max(b[0][p],a[n-1][q]);

}
